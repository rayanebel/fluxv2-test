name: release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  helm-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Helm
        uses: azure/setup-helm@v1
      - name: Verify Chart Version
        run: |
          CHART_VERSION=$(yq -r .version ./charts/cardano-validator-watcher/Chart.yaml)
          if [ "${{ github.ref_name }}" != "${CHART_VERSION}" ]; then
            echo "Version mismatch: release tag ${{ github.ref_name }} does not match Chart.yaml version ${CHART_VERSION}"
            exit 1
          fi
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV
      - name: Helm Registry Login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io --username kilnfi --password-stdin
      - name: 'Helm Package'
        id: helm-package
        run: |
          helm package charts/cardano-validator-watcher --version $CHART_VERSION
      - name: 'Helm Push'
        run: |
          helm push ./cardano-validator-watcher-$VERSION.tgz oci://${{ env.REGISTRY }}/kilnfi/charts/cardano-validator-watcher
        env:
          REGISTRY: ghcr.io
