name: build-image

on:
  workflow_call:
    inputs:
      target_arch:
        type: string
        default: "amd64"
      target_os:
        type: string
        default: "linux"
      image_name:
        required: true
        type: string
      runs_on:
        type: string
        default: "ubuntu-latest"
    outputs:
      full_image:
        description: "image"
        value: ${{ jobs.build.outputs.image }}

jobs:
  build:
    runs-on: ${{ inputs.runs_on }}
    outputs:
      image_tag: ${{ steps.determine-tag.outputs.tag }}
      image: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ steps.determine-tag.outputs.tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine Image Tag
        id: determine-tag
        run: |
          if [ "${{ github.ref_type }}" == "tag" ]; then
              echo "Setting image tag to ${{ github.ref_name }}"
              echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
              TAG="${{ github.ref_name }}-$(echo ${{ github.sha }} | cut -c1-7)"
              echo "Setting image tag to $TAG"
              echo "tag=$TAG" >> $GITHUB_OUTPUT
          fi

      - uses: docker/build-push-action@v6
        name: Build & Push Container Images
        id: build
        with:
          context: .
          file: Dockerfile
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.name=${{ inputs.image_name }}
            org.opencontainers.image.version=${{ steps.determine-tag.outputs.tag }}
            org.opencontainers.image.authors=contact@kiln.fi
          platforms: ${{ inputs.target_os }}/${{ inputs.target_arch }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |-
            ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ steps.determine-tag.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:latest

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.target_os }}-${{ inputs.target_arch }}
          path: /tmp/digests/*
          if-no-files-found: warn
          retention-days: 1

  merge:
    needs:
      - build
    runs-on: ${{ inputs.runs_on }}

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            -t "${{ env.REGISTRY_IMAGE }}:latest" \
            -t "${{ env.REGISTRY_IMAGE }}:${{ github.ref_name }}" \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
        env:
          REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:latest
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ needs.build.outputs.image_tag }}
        env:
          REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
